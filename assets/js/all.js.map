{"version":3,"sources":["all.js"],"names":["inputText","document","querySelector","addBtn","todoData","addEventListener","addTodo","todo","txt","value","id","Date","getTime","checked","unshift","updateList","todoList","render","arr","str","forEach","item","innerHTML","tab","changeTab","toggleStatus","e","target","dataset","tabs","querySelectorAll","classList","remove","add","deleteAndChecked","closest","getAttribute","preventDefault","filter","index","showData","workNum","todoLength","textContent","length","deleteBtn","key"],"mappings":"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","file":"all.js","sourcesContent":["// 0. HTML結構設計\n// 1. 新增\nconst inputText = document.querySelector(\"#inputText\");\nconst addBtn = document.querySelector(\"#addBtn\");\n\n\nlet todoData = [];\n\naddBtn.addEventListener(\"click\",addTodo);\n\nfunction addTodo(){\n  let todo = {\n    //txt 用來裝輸入資料用的\n    txt: inputText.value,\n    //id 用來做資料操作的，例如 刪除、切換狀態\n    id: new Date().getTime(),\n    //用來判別已完成或是待完成的功能\n    checked: '',\n  };\n\n  if (todo.txt !== \"\"){\n  todoData.unshift(todo);\n  // console.log(todoData) - 檢查資料是否有成功放入陣列裡\n  inputText.value =\"\";\n  }\n\n  // render(todoData)\n  updateList()\n};\n\n\n\n// 2. 渲染\nconst todoList = document.querySelector(\"#todoList\");\nfunction render (arr){\n  let str = \"\";\n  arr.forEach((item)=>{\n    str += `\n    <li data-id=\"${item.id}\">\n            <label class=\"checkbox\" for=\"\">\n              <input type=\"checkbox\" ${item.checked}/>\n              <span>${item.txt}</span>\n            </label>\n            <a href=\"#\" class=\"delete\"></a>\n          </li>`;\n  });\n\n  todoList.innerHTML = str;\n}\n\n\n\n// 3. tab active 切換 （CSS樣式）\nconst tab = document.querySelector(\"#tab\");\n\ntab.addEventListener(\"click\", changeTab);\n\nlet toggleStatus = \"all\"; // data-tab = all 全部狀態，也就是目前tab顯示狀態\n\nfunction changeTab(e){\n  //根據點到的data而去做切換toggleStatus\n  \n  toggleStatus = e.target.dataset.tab;\n\n  let tabs = document.querySelectorAll(\"#tab li\");\n\n  tabs.forEach((item)=> {\n    item.classList.remove(\"active\");\n  });\n\n  //active加在點到的位置\n  e.target.classList.add(\"active\");\n\n  updateList();\n};\n\n\n\n// 4. 刪除 ＆ 切換 checked 狀態功能\n\ntodoList.addEventListener(\"click\",deleteAndChecked);\n\n//要做刪除切換都要先get到id\nfunction deleteAndChecked (e){\n  //離點到部分，最靠近的li，並取得這個距離最近li裡的id值\n  let id = e.target.closest(\"li\").dataset.id;\n  //這個id的值是由`new Date().getTime()`產出\n  // console.log(id);\n\n  if (e.target.getAttribute(\"class\") === \"delete\") {\n    // 由於delete是 a 標籤，我們先它的預設取消\n    e.preventDefault();\n\n    todoData = todoData.filter((item) => item.id != id);\n    // console.log(todoData);\n    //篩選條件： todoData裡的 id 不能等於 點到的id，那就留下，因為符合篩選條件\n    //篩選的條件 為 `item.id ! == id`，只要 `item.id == id`，就會被過濾（刪除)，只留下 `item.id ! == id`\n\n    //我們點到的東西是 i.id == id (被點到的，並被覆值的) ，就等於是被過濾掉（刪除了）\n    \n  } else {\n    //來做切換checked狀態功能\n\n    todoData.forEach(function(item,index){\n      //if (item.id === id) 是為了要取到index的值 (艾拉版)\n      // specificity -如果沒有下面這段if (item.id === id)，只要勾選一個，其他也一並被同步勾選，就無法特別指定到底是哪一個需要被checked 還是 unchecked\n      if (item.id == id) {\n        //如果取得的index裡的checked 等於 checked的話\n        // 也可以這樣寫: \n        //替換todoData[index].checked v.s. item.checked\n        //if (todoData[index].checked == 'checked')\n        if (item.checked === \"checked\") {\n          //我們就把他的狀態拿掉，也就是無狀態的值\n          item.checked = \"\";\n          // console.log(todoData);\n        } else {\n          //如果現在是沒有被checked，我們就幫它加上checked\n          item.checked = \"checked\";\n          // console.log(todoData);\n        }\n      }\n    })\n\n  }\n  \n  // render(todoData);\n  updateList()\n};\n\n\n\n// 5. 更新代辦清單\n// **（會與第三點 tab 切換，做合併動作）**\n\nfunction updateList (){\n  let showData = [];\n  if (toggleStatus == \"all\") {\n    showData = todoData;\n  } else if (toggleStatus === \"work\") {\n    //由於work裡面的事項是還沒有被打勾，所以裡面checked屬性會是空的\n    showData = todoData.filter((item) => item.checked === \"\");\n  } else {\n    showData = todoData.filter((item) => item.checked === \"checked\");\n  }\n\n  //footer部分，顯示待完成項目，也在這裡同時一起完成\n\n  const workNum = document.querySelector(\"#workNum\")\n  let todoLength = todoData.filter(item=>item.checked === \"\")\n\n  workNum.textContent =todoLength.length;\n\n  render(showData);\n\n}\n\n\n//初始\nupdateList()\n\n\n\n// 6. 刪除已完成 todo\nconst deleteBtn = document.querySelector('#deleteBtn');\n\ndeleteBtn.addEventListener(\"click\",function(e){\n  e.preventDefault();\n\n  //篩選出 沒有checked的資料，並存留。\n  todoData = todoData.filter((item) => item.checked != \"checked\");\n  updateList();\n\n})\n\n// 7. 優化（keypress)\n//可以用enter直接新增\n\ninputText.addEventListener(\"keypress\", function(e){\n  if (e.key === \"Enter\"){\n    // console.log(e)\n    addTodo();\n  }\n})\n\n\n"]}